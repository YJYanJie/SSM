<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//OTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yj.mybatis.mapper.DynamicSQLMapper">

    <!--
        动态SQL：
            1. if：通过test属性中的表达式判断标签中的内容是否有效（是否拼接到sql中）
            2. where：where和if一般结合使用：
                若where标签中的if条件都不满足，则where标签没有任何功能，即不会添加where关键字
                若where标签中的if条件满足，则where标签会自动添加where关键字，并将条件最前方多余的and去掉
                where标签不能去掉条件最后多余的and
            3. trim:用于去掉或添加标签中的内容
                prefix：在trim标签中的内容的前面添加某些内容
                prefixOverrides：在trim标签中的内容的前面去掉某些内容
                suffix：在trim标签中的内容的后面添加某些内容
                suffixOverrides：在trim标签中的内容的后面去掉某些内容
            4. choose、when、otherwise:相当于 java 中的 if...else if...else
                when至少设置一个，otherwise最多设置一个
            5. foreach
                collection:设置要循环的集合或数组名
                item:用一个字符串表示数组或集合中的一条数据
                separator:设置每次循环的数据之间的分隔符
                open:循环的所有内容以什么开始
                close:循环的所有内容以什么结束
            6. SQL片段
                可以记录一段sql，在需要用的地方，通过include标签进行引用
                <sql id="empColums">
                    emp_id,emp_name,age,gender,dept_id
                </sql>
                select <include refid="empColums"></include> from t_emp
    -->
    <sql id="empColums">
        emp_id,emp_name,age,gender,dept_id
    </sql>

    <!--    List<Emp> getEmpByCondition(Emp emp);-->
    <select id="getEmpByCondition" resultType="Emp">
        select <include refid="empColums"></include> from t_emp
        <trim prefix="where" suffixOverrides="and">
            <if test="empName != null and empName != ''">
                emp_name = #{empName} and
            </if>
            <if test="age != null and age != ''">
                age = #{age} and
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <select id="getEmpByConditionOne" resultType="Emp">
        select * from t_emp where 1 = 1
        <if test="empName != null and empName != ''">
           and emp_name = #{empName}
        </if>
        <if test="age != null and age != ''">
            and age = #{age}
        </if>
        <if test="gender != null and gender != ''">
            and gender = #{gender}
        </if>
    </select>

    <select id="getEmpByConditionTow" resultType="Emp">
        select * from t_emp
        <where>
            <if test="empName != null and empName != ''">
                emp_name = #{empName}
            </if>
            <if test="age != null and age != ''">
                and age = #{age}
            </if>
            <if test="gender != null and gender != ''">
                and gender = #{gender}
            </if>
        </where>
    </select>


<!--    List<Emp> getEmpByChoose(Emp emp);-->
    <select id="getEmpByChoose" resultType="Emp">
        select * from t_emp
        <where>
            <choose>
                <when test="empName != null and empName != ''">
                    emp_name = #{empName}
                </when>
                <when test="age != null and age != ''">
                    age = #{age}
                </when>
                <when test="gender != null and gender != ''">
                    gender = #{gender}
                </when>
                <otherwise>

                </otherwise>
            </choose>
        </where>
    </select>


<!--    void insertMoreEmp(List<Emp> emps);-->
    <insert id="insertMoreEmp">
        insert into t_emp values
        <foreach collection="emps" item="emp" separator=",">
            (null, #{emp.empName}, #{emp.age}, #{emp.gender}, null)
        </foreach>
    </insert>

<!--    void deleteMoreEmp(@Param("empIds") Integer[] empIds);-->
    <delete id="deleteMoreEmp">
<!--        delete from t_emp where emp_id in-->
<!--        <foreach collection="empIds" item="empId" separator="," open="(" close=")">-->
<!--            #{empId}-->
<!--        </foreach>-->

        delete from t_emp where
        <foreach collection="empIds" item="empId" separator="or">
            emp_id = #{empId}
        </foreach>
    </delete>
</mapper>